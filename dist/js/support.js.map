{"version":3,"file":"support.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yBAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,oCAAoC,yBAAyB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,iEAAe,cAAc;;;;;;;;;;;;;;ACzC7B;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,iEAAe,iBAAiB;;;;;;UCxChC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN6C;AACM;AACnD;AACA;AACA,KAAK,0DAAc;AACnB;AACA,MAAM;AACN,KAAK,6DAAiB;AACtB;AACA;AACA;AACA;AACA,MAAM;AACN,CAAC,E","sources":["webpack://languagetogo/./app/js/modules/phone.js","webpack://languagetogo/./app/js/modules/register.js","webpack://languagetogo/webpack/bootstrap","webpack://languagetogo/webpack/runtime/define property getters","webpack://languagetogo/webpack/runtime/hasOwnProperty shorthand","webpack://languagetogo/webpack/runtime/make namespace object","webpack://languagetogo/./app/js/support.js"],"sourcesContent":["function phoneValidator({\r\n     inputSelector\r\n}){\r\n     const phoneInput = document.querySelector(inputSelector);\r\n     let phoneString = '+7(___)___-__-__';\r\n     const regExp = /_/g;\r\n     const changePhoneString = (index, val) => {\r\n          let tempPhoneArray = phoneString.split('');\r\n          tempPhoneArray[index] = val;\r\n          phoneString = tempPhoneArray.join('');\r\n          phoneInput.value = phoneString;\r\n     };\r\n     const phoneIndexes = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\r\n     const phoneValuesIndexes = [3, 4, 5, 7, 8, 9, 11, 12, 14, 15];\r\n     \r\n     \r\n     phoneInput.addEventListener('input', (e) => {\r\n          console.log(phoneString.match(regExp).length);\r\n          if (phoneString.match(regExp) === null) {\r\n               changePhoneString(15, '_');\r\n          } \r\n          else {\r\n               if(e.data === null) {\r\n                    for (let i = 0; i < phoneIndexes.length; i++) {\r\n                         if (phoneString.match(regExp).length == phoneIndexes[i] - 1) {\r\n                              changePhoneString(phoneValuesIndexes[i], '_');\r\n                              break;\r\n                         }\r\n                    }\r\n               } else {\r\n                    for (let i = 0; i < phoneIndexes.length; i++) {\r\n                         if (phoneString.match(regExp).length == phoneIndexes[i]) {\r\n                              changePhoneString(phoneValuesIndexes[i], e.data);\r\n                              break;\r\n                         }\r\n                    }\r\n               }\r\n          }\r\n     });\r\n}\r\n\r\nexport default phoneValidator;","function registerValidator({\r\n     closeBtnsSelector,\r\n     lessonPopUpSelector,\r\n     formSelector,\r\n     formInputsSelector\r\n}){\r\n     const closeBtns = document.querySelectorAll(closeBtnsSelector),\r\n           lessonModal = document.querySelector(lessonPopUpSelector),\r\n           form = document.querySelector(formSelector),\r\n           formInputs = form.querySelectorAll(formInputsSelector);\r\n     const openModal = (modal) => {\r\n          modal.style.display = 'flex';\r\n          document.body.style.overflowY = 'hidden';\r\n     };\r\n     const closeModal = () => {\r\n          document.body.style.overflowY = 'auto';\r\n          lessonModal.style.display = 'none';\r\n     };\r\n     closeBtns.forEach(btn => {\r\n          btn.addEventListener('click', closeModal);\r\n     });\r\n     form.addEventListener('submit', (e) => {\r\n     let formChecker = 0;\r\n     e.preventDefault();\r\n     for (let i = 0; i < formInputs.length; i++) {\r\n          if(formInputs[i].value === '') {\r\n               formChecker++;\r\n               formInputs[i].style.border = '1px solid #E42125';\r\n          } else {\r\n               formInputs[i].style.border = 'none';\r\n          }\r\n     }\r\n     if (formChecker === 0) {\r\n          closeModal();\r\n          openModal(lessonModal);\r\n          form.reset();\r\n     }\r\n     });\r\n}\r\n\r\nexport default registerValidator;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import phoneValidator from './modules/phone';\r\nimport registerValidator from './modules/register';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n     phoneValidator({\r\n          inputSelector: '#phone__input'\r\n     });\r\n     registerValidator({\r\n          closeBtnsSelector: '.close__btn',\r\n          lessonPopUpSelector: '#support__modal',\r\n          formSelector: '.form',\r\n          formInputsSelector: 'input[type=\"text\"], textarea, input[type=\"tel\"]'\r\n     });\r\n});"],"names":[],"sourceRoot":""}